{"version":3,"sources":["components/navbar.jsx","components/home.jsx","components/intro.jsx","components/about.jsx","pages/homeScreen.jsx","pages/projects.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","navs","this","props","mode","theme","style","backgroundColor","color","map","nav","index","Item","key","className","to","link","displayName","Component","HomePage","Container","Image","src","alt","roundedCircle","Intro","state","show","cursor","hideWhenDone","avgTypingDelay","AboutMe","Row","Col","xs","md","Header","HomeScreen","Content","Meta","ProjectScreen","hoverable","width","margin","cover","title","description","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e1040d6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Layout, Menu} from 'antd'\nimport {Link} from 'react-router-dom'\nimport {Container, Nav} from 'react-bootstrap';\nimport './navbar.css';\n\n/* \na nav should have: \nnav {\n    displayName: photoshop, \n    className: PS,\n    link: / or none,\n}\n*/\nclass Navbar extends Component {\n    render(){\n        const {navs} = this.props\n        return (\n                <Menu mode='horizontal' theme='light' style={{backgroundColor:'transparent', color:'white', }}>\n                {navs.map((nav, index)=>{\n                    return(\n                        <Menu.Item key={`option-${index}`} className={nav.className}>\n                            <Link to={nav.link} style={{color:'white'}}>{nav.displayName}</Link>\n                        </Menu.Item>\n                    )\n                })}\n                </Menu>\n        )\n    }\n}\nexport default Navbar\n\n/* \n\n            <NavBar bg='transparent' expand='xl'>\n                <Container>\n                <NavBar.Brand href=\"/\">Home Page</NavBar.Brand>\n                <Nav className='mr-auto'>\n                    <Nav.Link><Link  to='/projects'>Projects</Link></Nav.Link>\n                    <Nav.Link to='/about'>About me</Nav.Link>\n                </Nav>\n                <Nav>\n                <div className='top-search'>\n                    <a className='search-click'> Search\n                        <i className='fa fa-search'>\n                        </i>\n                    </a>\n                </div>\n                </Nav>\n                </Container>\n            </NavBar>\n*/","import React, {Component} from 'react';\nimport {Container} from 'react-bootstrap';\nimport Image from 'react-bootstrap/Image'\nimport './home.css'\n\nexport default class HomePage extends Component{\n    render(){\n        return(\n            <div className='main-background'>\n            <Container>\n                <div className='avatar'>\n                    <Image src='https://via.placeholder.com/200' alt='avatar' roundedCircle></Image>\n                </div>\n                <div className='details'>\n                    <h1 className='name'>Yujia Xie</h1>\n                    <h2 className='main-details'>Undergraduate Student at Northwestern University</h2>\n                    <p className='extended-details'>Lorem ipsum dolor sit, amet consectetur adipisicing elit. A alias adipisci odio officiis odit voluptate qui dignissimos quidem, dolore sed ipsam magni vel quam illum ea. Dolore officia nihil maiores.</p>\n                </div>\n            </Container>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport Typist from 'react-typist';\nimport './intro.css'\n\nexport default class Intro extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            show: false \n        };\n    }\n    render(){\n        const string =\"incredible and amazing\"\n        return(\n            <div className='section'>\n                <h1 className='headline'>\n                    {/* Static Text */}\n                    <span className='I-m'>\n                        Hi. I'm\n                    </span>\n                    {/* Automatically filled Text */}\n                    <span>\n                        <b className='fill-1'>\n                        <Typist cursor={{show: false, hideWhenDone: false}} avgTypingDelay={100}>{string}</Typist>\n                        </b>\n                    </span>\n                </h1>\n            </div>\n        )\n    }\n\n}\n","import React, {Component} from 'react';\nimport { Container,Row, Col, Image } from 'react-bootstrap';\nimport './about.css'\n\nexport default class AboutMe extends Component{\n    render(){\n        return(\n            <div className='full-aboutme'>\n                <Row className='big-aboutme'>\n                    <Col xs={12} md={7}>\n                        <h1 className='title'>About Me</h1>\n                        <p className='paragraph'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Maiores eaque deleniti a dolore dolores dolor voluptas est, molestias fugit. Vel totam nobis laudantium dolor dolores voluptate consectetur, excepturi repellat architecto!</p>\n                        <p className='paragraph'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsum dolor quas provident a quae. Accusamus quasi possimus, excepturi culpa expedita cum natus iste, earum quibusdam illo eum veniam debitis quo!</p>\n                    </Col>\n                    <Col xs={12} md={5}>\n                        <Image src='https://via.placeholder.com/400' alt='about-me-image'/> \n                    </Col>\n                </Row>\n                <section className='extra-aboutme'>\n                    <Row className='extra-content'>\n                        <Col className='coffee'></Col>\n                        <Col className='hobbies'></Col>\n                        <Col className='quality'></Col>\n                    </Row>\n                </section>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport Navbar from '../components/navbar'\nimport HomePage from '../components/home';\nimport Intro from '../components/intro';\nimport AboutMe from '../components/about';\nimport {Layout} from 'antd';\nconst {Header} = Layout\n\nconst navs = [\n  {\n    displayName: 'Home Page',\n    className: 'home',\n    link: '/'\n  },\n  {\n    displayName: 'Projects', \n    className: 'projects',\n    link: '/projects'\n  },\n  {\n    displayName: 'About Me',\n    className:'aboutme',\n    link: '/about'\n  }\n]\n\nexport default class HomeScreen extends Component {\n    render(){\n        return(\n            <div className='all'>\n              <Header>\n                <Navbar navs={navs}/>\n              </Header>\n              <HomePage />\n              <section>\n                <Intro />\n              </section>\n              <section>\n                <AboutMe />\n              </section>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react'; \nimport {Layout, Card} from 'antd'\nimport Navbar from '../components/navbar'\n\nconst { Header, Content} = Layout;\nconst { Meta } = Card;\n\nconst navs=[\n    {\n        displayName: 'Home', \n        className: 'home',\n        link: '/'\n    },\n    {\n        displayName: 'PhotoShop',\n        className: 'PS',\n        link: '#'\n    },\n    {\n        displayName: 'Machine Learning',\n        className: 'ML',\n        link: '#'\n    },\n    {\n        displayName: 'Web',\n        className: 'web',\n        link: '#'\n    }, \n    {\n        displayName: 'Data Visualization',\n        className: 'Data',\n        link: '#'\n    }\n]\nexport default class ProjectScreen extends Component{\n    render(){\n        return(\n            <Layout>\n                <Header>\n                    <Navbar navs={navs}/>\n                </Header>\n                <Content>\n                    <Card hoverable style={{width: 240, margin:`20px 40px`}}\n                    cover={<img src='https://via.placeholder.com/200' alt='example'/>}>\n                        <Meta title='example' description='blahblahblah' />\n                    </Card>\n                </Content>\n            </Layout>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport HomeScreen from './pages/homeScreen'\nimport ProjectScreen from './pages/projects'\nimport 'antd/dist/antd.css'\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/'>\n          <HomeScreen />\n        </Route>\n        <Route path='/projects'>\n          <ProjectScreen />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<BrowserRouter>\n                    <App />\n                </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}